<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
		default-lazy-init="true">

	<description>Spring公共配置</description>
 
	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="org.akl">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<bean id="xMLMapperLoader" class="org.mybatis.XMLMapperLoader" lazy-init="false"></bean>
	
	<!-- MyBatis配置  -->
	<bean id="sqlSessionFactory" class="org.mybatis.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描目录,省掉Configuration.xml里的手工配置, 用','分隔多个package -->
		<property name="typeAliasesPackage" value="org.bsxf.common.entity" />
		
		<property name="configLocation" value="classpath:/mapper/Configuration.xml" /> 
		<property name="mapperLocations" value="classpath:/mapper/**/*Mapper.xml" />
	</bean> 
	<!--  <bean id="xMLMapperLoader" class="org.mybatis.spring.XMLMapperLoader" lazy-init="false"></bean>
	-->
	<!-- 扫描MyBatis Dao-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="org.bsxf.common.repository" />
	</bean>
	<!-- 事务管理器配置, 使用jdbc事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

	<!-- JSR303 Validator定义 -->
 	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
	
	<!-- 以静态变量保存ApplicationContext -->
	<bean class="org.springside.web.SpringContextHolder" lazy-init="false" />
	<bean class="org.bsxf.utils.JdbcUtil" lazy-init="false" />
<bean id="aopLog" class="org.bsxf.aop.AopLog"></bean>  
 <aop:aspectj-autoproxy />	
 <aop:config>  
    <aop:aspect ref="aopLog">  
        <aop:around method="runOnAround"  pointcut="execution (* org.bsxf.common.web.*.*.*(..))"/>  
    </aop:aspect>  
</aop:config>  


 
       
		
	 
		
		
	<!-- 	production/local development环境 -->
	<beans profile="production,development">
		<context:property-placeholder ignore-resource-not-found="true"
			location="classpath*:/application.properties,
          			  classpath*:/application.local.properties" />	

		<!-- 数据源配置,使用应用内的DBCP数据库连接池  
		
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
			 Connection Info 
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			  Connection Pooling Info  
			<property name="maxActive" value="${dbcp.maxActive}" />
			<property name="maxIdle" value="${dbcp.maxIdle}" />
			<property name="defaultAutoCommit" value="false" />
			 连接Idle一个小时后超时
			<property name="timeBetweenEvictionRunsMillis" value="3600000" />
			<property name="minEvictableIdleTimeMillis" value="3600000" />
		</bean> -->
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
			<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
		
			<!-- Connection Pooling Info
			<property name="maxActive" value="${dbcp.maxActive}" />
				<property name="maxIdle" value="${dbcp.maxIdle}" />
				 -->
			<property name="validationQuery" value="SELECT 'x'" />
			<property name="testWhileIdle" value="true" />
		
			<property name="defaultAutoCommit" value="false" />
			<!-- 连接Idle一个小时后超时 -->
			<property name="timeBetweenEvictionRunsMillis" value="3600000" />
			<property name="minEvictableIdleTimeMillis" value="3600000" />
			<property name="testOnBorrow" value="false" />
		    <property name="testOnReturn" value="false" />
		 <!--   <property name="poolPreparedStatements" value="false" /> 
		 
		    <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />--> 
			<!-- 添加监控用途的statFilter -->
			<property name="filters" value="stat" />
		</bean>
	 
	</beans>
</beans>