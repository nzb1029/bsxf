<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.bsxf.common.repository.akl.CostMybatisDao">
   <sql id="costSql">
 select s.id,
		p.id as 'block.id',
		p.name as 'block.name',
		s.time,
		s.tsUnitPrice,
		s.tsNormalUse,
		s.tsAKLUse,
		s.fhfUnitPrice,
		s.fhfNormalUse,
		s.fhfAKLUse,
		s.normalCost,
		s.aKLCost,
		s.field01,
		s.field02,
		s.field03
		from akl_cost s 
		 left join akl_block p on p.id=s.block_id
		where 1=1 
	</sql>
	
	<select id="getCostByBlockId" parameterType="string" resultType="Cost">
		<include refid="costSql"/>
		 and  s.block_id =#{blockId}
		 order by s.time asc
	</select>
	
	<select id="getAllCost" parameterType="string" resultType="Cost">
		<include refid="costSql"/>
		 
	</select>
	
    <select id="getCost" parameterType="string" resultType="Cost">
		<include refid="costSql"/>
		  and  s.id=#{id}
	</select>
	
	<select id="findCostByFilter" parameterType="Page" resultType="Cost">
		<include refid="costSql"/>
		<if test="filters.name!=null"> 
			 and p.name like '%' #{filters.name} '%'
		</if>
		<if test="orderBy!=null">
	      order by ${orderBy} ${order}
	   </if>
	      limit #{start},#{pageSize}
	</select>
	
	<select id="findCostCountByFilter" parameterType="Page" resultType="int">
	     select count(1) from (	
	     <include refid="costSql"/>
		  	<if test="filters.name!=null"> 
			   and p.name like '%' #{filters.name} '%'
			</if>
			<if test="orderBy!=null">
		      order by ${orderBy} ${order}
		   </if>
	     )t
	</select>
	<insert id="saveCost" parameterType="Cost">
		insert into akl_cost (id,
			block_id,
			time,
			tsUnitPrice,
			tsNormalUse,
			tsAKLUse,
			fhfUnitPrice,
			fhfNormalUse,
			fhfAKLUse,
			normalCost,
			aKLCost,
		    field01,
		    field02,
		    field03
		    ) 
		 values(#{id},
			#{block.id},
			#{time},
			#{tsUnitPrice},
			#{tsNormalUse},
			#{tsAKLUse},
			#{fhfUnitPrice},
			#{fhfNormalUse},
			#{fhfAKLUse},
			#{normalCost},
			#{aKLCost},
		    #{field01},
		    #{field02},
		    #{field03}
			)
	</insert>
	<update id="updateCost" parameterType="Cost">
		update akl_cost set 
			block_id     = #{block.id},         
			time         = #{time},        
			tsUnitPrice  = #{tsUnitPrice}, 
			tsNormalUse  = #{tsNormalUse}, 
			tsAKLUse     = #{tsAKLUse},    
			fhfUnitPrice = #{fhfUnitPrice},
			fhfNormalUse = #{fhfNormalUse},
			fhfAKLUse    = #{fhfAKLUse},   
			normalCost   = #{normalCost},  
			aKLCost      = #{aKLCost},     
			field01      = #{field01},      
			field02      = #{field02},      
			field03      = #{field03}    
		 where id=#{id} 
	</update>
	 <delete id="deleteCost" >
	    delete from   akl_cost  where id in 
	  <foreach  item="item" index="index" collection="list"
     	 open="(" separator="," close=")">
       		 #{item}
  	 </foreach> 
	</delete>	
</mapper>