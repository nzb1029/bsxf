<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.bsxf.common.repository.bsxf.EquipmentMybatisDao">
   <sql id="equipmentSql">
 select s.id, 
		s.create_time as  createTime ,
		u.id as "createUser.id" ,
		u.name as "createUser.name",
		s.equipment_type_id as equipmentTypeId ,
		d1.name as equipmentTypeName,
		s.sub_type_id as subTypeId,
		d2.name as subTypeName,
		s.name ,
		s.eno ,
		s.area ,
		s.location ,
		s.comments ,
		s.status ,
		s.runStatus ,
		d4.name as runStatusDes,
		s.effDate ,
		s.expDate ,
		s.checkFreq ,
		d3.name as checkFreqDes,
		s.remainNum ,
		s.lastRemainNum ,
		uu.id as "checkUser.id" ,
		uu.name as "checkUser.name",
		s.pointx,
		s.pointy,
		s.field01,
		s.field02,
		s.field03,
		s.amount,
		s.productDate
		from bsxf_equipment s 
		    left join ss_user u on u.id = s.create_user_id
		    left join ss_user uu on uu.id = s.check_user_id
		    left join ss_dictionary d1 on d1.type_code = 'xf_type' AND d1.STATUS ='enabled' and d1.parent_id is not null and d1.val = s.equipment_type_id
		    left join ss_dictionary d2 on d2.type_code = 'xf_category' AND d2.STATUS ='enabled' and d2.parent_id is not null and d2.val = s.sub_type_id
		    left join ss_dictionary d3 on d3.type_code = 'xf_check_freq' AND d3.STATUS ='enabled' and d3.parent_id is not null and d3.val = s.checkFreq
		    left join ss_dictionary d4 on d4.type_code = 'xf_status' AND d4.STATUS ='enabled' and d4.parent_id is not null and d4.val = s.runStatus
		where 1=1 
	</sql>
	  <select id="getAllEquipment" parameterType="string" resultType="Equipment">
		<include refid="equipmentSql"/>
		 and s.status = 'enabled'
	  </select>
	  
	  <select id="getRemainEquipments" parameterType="string" resultType="Equipment">
		<include refid="equipmentSql"/>
		 and s.status = 'enabled'
		 and s.remainNum &gt; 0
	  </select>

    <select id="getEquipment" parameterType="string" resultType="Equipment">
		<include refid="equipmentSql"/>
		  and  s.id=#{id}
	</select>

	<select id="getEquipmentByEno" parameterType="string" resultType="Equipment">
		<include refid="equipmentSql"/>
			and  s.eno=#{eno}
	</select>

	<select id="getAllEquipmentId" parameterType="String" resultType="String">
		select distinct id from bsxf_equipment
	</select>
	
    <select id="getUserEquipment" parameterType="string" resultType="Equipment">
		<include refid="equipmentSql"/>
		  and s.user_id =#{userId}
		  and s.status = 'enabled'
	</select>
	
	<select id="findEquipmentByFilter" parameterType="Page" resultType="Equipment">
		<include refid="equipmentSql"/>
		 and s.status = 'enabled'
		<if test="filters.createTime!=null"> 
			 and s.create_time = str_to_date(#{filters.createTime},'%Y-%m-%d %H:%i:%s')  
		</if>
		<if test="filters.name!=null"> 
			 and s.name=#{filters.name}
		</if>
		<if test="filters.checkUserId!=null"> 
			 and s.check_user_id=#{filters.checkUserId}
		</if>
		<if test="filters.eno!=null"> 
			 and s.eno=#{filters.eno}
		</if>
		<if test="filters.userName!=null"> 
			 and uu.name like '%' #{filters.userName} '%'
		</if>
		<if test="orderBy!=null">
	      order by ${orderBy} ${order}
	   </if>
	      limit #{start},#{pageSize}
	</select>
	
	<select id="findEquipmentCountByFilter" parameterType="Page" resultType="int">
	     select count(1) from (	
	     <include refid="equipmentSql"/>
	     and s.status = 'enabled'
	   <if test="filters.name!=null"> 
			 and s.name=#{filters.name}
		</if>
	   <if test="filters.checkUserId!=null"> 
			 and s.check_user_id=#{filters.checkUserId}
		</if>
		<if test="filters.eno!=null"> 
			 and s.eno=#{filters.eno}
		</if>
		<if test="filters.userName!=null"> 
			 and uu.name like '%' #{filters.userName} '%'
		</if>
		<if test="orderBy!=null">
	      order by ${orderBy} ${order}
	   </if>
	     )t
	</select>
	<insert id="saveEquipment" parameterType="Equipment">
		insert into bsxf_equipment (
		    id                  ,
			create_time         ,
			last_update_time    ,
			create_user_id      ,
			last_update_user_id ,
			equipment_type_id   ,
			sub_type_id         ,
			name                ,
			eno                 ,
			area                ,
			location            ,
			amount              ,
			comments            ,
			status              ,
			runStatus           ,
			productDate         ,
			effDate             ,
			expDate             ,
			checkFreq           ,
			remainNum           ,
			lastRemainNum       ,
			check_user_id       ,
			pointx              ,
			pointy              ,
			field01             ,
			field02             ,
			field03             
		    ) 
		 values(#{id},
			#{createTime},
			#{lastUpdateTime},
			#{createUser.id},
			#{lastUpdateUser.id},
			#{equipmentTypeId},
			#{subTypeId},
			#{name},
		    #{eno},
		    #{area},
		    #{location},
		    #{amount},
		    #{comments},
		    #{status},
		    #{runStatus},
		    #{productDate},
		    #{effDate},
		    #{expDate},
		    #{checkFreq},
		    #{remainNum},
		    #{lastRemainNum},
		    #{checkUser.id},
		    #{pointx},
		    #{pointy},
		    #{field01},
		    #{field02},
		    #{field03}
			)
	</insert>
	<update id="updateEquipment" parameterType="Equipment">
		update bsxf_equipment set 
			create_time         = #{createTime},           
			last_update_time    =	#{lastUpdateTime},   
			create_user_id      =	#{createUser.id},    
			last_update_user_id =	#{lastUpdateUser.id},
			equipment_type_id   =	#{equipmentTypeId},  
			sub_type_id         =	#{subTypeId},        
			name                =	#{name},             
			eno                 =	#{eno},            
			area                =	#{area},           
			location            =	#{location},
			amount              =	#{amount},
			comments            =	#{comments},       
			status              =	#{status},         
			runStatus           =	#{runStatus},      
			productDate         =	#{productDate},
			effDate             =	#{effDate},
			expDate             =	#{expDate},        
			checkFreq           =	#{checkFreq},      
			remainNum           =	#{remainNum},      
			lastRemainNum       =	#{lastRemainNum},  
			check_user_id       =	#{checkUser.id},   
			pointx              =	#{pointx},         
			pointy              =	#{pointy},         
			field01             =	#{field01},        
			field02             =	#{field02},        
			field03             =	#{field03}         
		 where id=#{id} 
	</update>
	<delete id="disabledEquipment" >
	    update   bsxf_equipment set status='disabled' where id in 
	  <foreach  item="item" index="index" collection="list"
     	 open="(" separator="," close=")">
       		 #{item}
  	 </foreach> 
	</delete>	
	 <delete id="deleteEquipment" >
	    delete from   bsxf_equipment  where id in 
	  <foreach  item="item" index="index" collection="list"
     	 open="(" separator="," close=")">
       		 #{item}
  	 </foreach> 
	</delete>
</mapper>